{{- if .Values.rollouts.enabled }}
apiVersion: argoproj.io/v1alpha1
kind: Rollout
{{- else }}
apiVersion: apps/v1
kind: Deployment
{{- end }}
metadata:
  name: {{ include "quarkus.fullname" . }}
  labels:
    {{- include "quarkus.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: 2
  {{- end }}
  selector:
    matchLabels:
      {{- include "quarkus.selectorLabels" . | nindent 6 }}
      {{- with .Values.version }}
      version: {{ . }}
      {{- end }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
        {{- if $.Values.global.istio.enabled }}
        sidecar.istio.io/inject: "true"
        {{- end }}
      {{- end }}
      labels:
        {{- include "quarkus.selectorLabels" . | nindent 8 }}
        {{- with .Values.version }}
        version: {{ . }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "quarkus.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          envFrom:
          - configMapRef:
              name: "{{ include "quarkus.fullname" $ }}-configmap-env"
          - configMapRef:
              name: "{{ include "quarkus.fullname" $ }}-configmap-env-base"
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/live
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 10
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- if .Values.rollouts.blueGreen.enabled }}
  strategy:
    blueGreen: 
      prePromotionAnalysis:
          templates:
          - templateName: {{ include "quarkus.fullname" . }}-analysis-template
      activeService: {{ .Values.rollouts.blueGreen.activeService }}
      previewService: {{ .Values.rollouts.blueGreen.previewService }}
      autoPromotionEnabled: {{ .Values.rollouts.blueGreen.autoPromotionEnabled }}
{{- end }}
{{- with .Values.rollouts.canary }}
  strategy:
    canary:
      {{- toYaml .| nindent 6 }}
{{- end }}